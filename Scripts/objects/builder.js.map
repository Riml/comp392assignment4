{"version":3,"sources":["objects/builder.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AACH,IAAO,OAAO,CAsEb;AAtED,WAAO,OAAO,EAAC,CAAC;IACZ;;;;;OAKG;IACH;QACK,yCAAyC;QAE1C,6CAA6C;QAC7C;QAEA,CAAC;QAED,iBAAiB;QAChB;;;;;UAKE;QACI,4BAAU,GAAjB,UAAkB,IAAY,EAAE,IAAW,EAAE,IAAW,EACtC,IAAW,EAAE,QAAwB,EAAE,IAAe;YAAf,oBAAe,GAAf,QAAe;YACpE,IAAI,YAAY,GAAI,IAAI,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YACtD,IAAI,QAAQ,GAAW,EAAE,CAAC;YAC1B,IAAI,iBAAiC,CAAC;YACtC,UAAU;YACV,EAAE,CAAA,CAAC,IAAI,IAAE,CAAC,CAAC,CAAA,CAAC;gBACR,iBAAiB,GAAG,IAAI,eAAe,CAAC,EAAC,KAAK,EAAC,QAAQ,EAAC,CAAC,CAAC;gBAC1D,QAAQ,GAAC,UAAU,CAAC;YACxB,CAAC;YACD,QAAQ;YACR,EAAE,CAAA,CAAC,IAAI,IAAE,CAAC,CAAC,CAAC,CAAC;gBACT,iBAAiB,GAAG,IAAI,eAAe,CAAC,EAAC,KAAK,EAAC,QAAQ,EAAC,CAAC,CAAC;gBAC1D,QAAQ,GAAC,QAAQ,CAAA;YACrB,CAAC;YACD,IAAI,gBAAgB,GAAG,OAAO,CAAC,cAAc,CAAC,iBAAiB,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YAE3E,IAAI,MAAM,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,YAAY,EAAE,gBAAgB,EAAE,CAAC,CAAC,CAAC;YACpE,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YACtC,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAC;YACvB,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACzB,CAAC;QAED;;;;;WAKG;QACI,kCAAgB,GAAvB,UAAwB,MAAa,EAAE,OAAc,EAAE,MAAa,EAAE,MAAc,EAAE,QAAwB;YAE1G,0CAA0C;YAC1C,IAAI,MAAM,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;YAC1C,IAAI,MAAM,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC;YAC5B,IAAI,MAAM,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;YAE1C,8DAA8D;YAC9D,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAC,CAAC;gBAC7B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAC,CAAC;oBAC9B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAC,CAAC;wBAC9B,IAAI,CAAC,UAAU,CAAE,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;oBAC3E,CAAC;gBACL,CAAC;YACJ,CAAC;QACL,CAAC;QAGN,cAAC;IAAD,CA9DA,AA8DC,IAAA;IA9DY,eAAO,UA8DnB,CAAA;AACL,CAAC,EAtEM,OAAO,KAAP,OAAO,QAsEb","file":"objects/builder.js","sourcesContent":["/**\n * The Builder module is a namespace to reference simplified creation methods\n * \n * @module builder\n */\nmodule builder {\n    /**\n     * The creator\n     * \n     * @class Play\n     * @param havePointerLock {boolean}\n     */\n    export class Creator{\n         // PUBLIC INSTANCE VARIABLES ++++++++++++\n     \n        // CONSTRUCTOR ++++++++++++++++++++++++++    \n        constructor() {\n         \n        }\n\n        // PUBLIC METHODS\n         /**\n         * Add the cube type 0 - standart, 1 - golden\n         * \n         * @method createCube\n         * @return void\n         */\n        public createCube(posX: number, posY:number, posZ:number, \n                          type:number, attachTo: THREE.Object3D, size:number = 1): void {\n            var cubeGeometry  = new BoxGeometry(size, size, size);\n            var cubeName: string = \"\";\n            var basicCubeMaterial:LambertMaterial;\n            //standard\n            if(type==0){\n                basicCubeMaterial = new LambertMaterial({color:0xFFffFF});\n                cubeName=\"standard\";\n            }\n            //golden\n            if(type==1) {\n                basicCubeMaterial = new LambertMaterial({color:0xFACEee});\n                cubeName=\"golden\"\n            }  \n            var cubePhysMaterial = Physijs.createMaterial(basicCubeMaterial, 0.1, 0.1);\n\n            var myCube = new Physijs.BoxMesh(cubeGeometry, cubePhysMaterial, 1);\n            myCube.position.set(posX, posY, posZ);\n            myCube.name = cubeName;\n            attachTo.add(myCube);\n        }\n        \n        /**\n         * Add a cubetangle object W/H/D in cubes\n         * \n         * @method createCubetangle\n         * @return void\n         */\n        public createCubetangle(widthX:number, heightY:number, depthZ:number, origin:Vector3, attachTo: THREE.Object3D){\n            \n            // Set up offsets to correctly place cubes\n            var startX = (widthX / 2) * -1 + origin.x;\n            var startY = 0.5 + origin.y;\n            var startZ = (depthZ / 2) * -1 + origin.z;\n             \n            // Loop through and create cubetangle with specifed # of cubes\n            for (var w = 0; w < widthX; w++){\n                for (var h = 0; h < heightY; h++){\n                    for (var d = 0; d < depthZ; d++){\n                       this.createCube( (startX + w), (startY + h), (startZ + d), 0, attachTo);\n                    }\n                }\n             }\n         }\n        \n        \n    }\n}"],"sourceRoot":"/source/"}